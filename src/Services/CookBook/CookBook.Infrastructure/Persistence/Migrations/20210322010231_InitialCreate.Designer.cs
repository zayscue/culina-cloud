// <auto-generated />
using System;
using Culina.CookBook.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Culina.CookBook.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210322010231_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CookBook")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("IngredientName");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.HasKey("Id");

                    b.HasIndex("IngredientName")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Description");

                    b.Property<int>("EstimatedMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("EstimatedMinutes");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<int>("NumberOfIngredients")
                        .HasColumnType("integer")
                        .HasColumnName("NumberOfIngredients");

                    b.Property<int>("NumberOfSteps")
                        .HasColumnType("integer")
                        .HasColumnName("NumberOfSteps");

                    b.Property<string>("Serves")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("Serves");

                    b.Property<string>("Yield")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("Yield");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeImage", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<string>("Url")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Url");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.HasKey("RecipeId", "Url");

                    b.ToTable("RecipeImages");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid")
                        .HasColumnName("Ingredient");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("Part");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("Quantity");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeMetadata", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<string>("Type")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("Type");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Value");

                    b.HasKey("RecipeId", "Type");

                    b.ToTable("RecipeMetadata");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeNutrition", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<decimal>("Calories")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Calories");

                    b.Property<decimal>("CaloriesFromFat")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("CaloriesFromFat");

                    b.Property<decimal>("CaloriesFromFatPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("CaloriesFromFatPdv");

                    b.Property<decimal>("Cholesterol")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Cholesterol");

                    b.Property<decimal>("CholesterolPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("CholesterolPdv");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<decimal>("DietaryFiber")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("DietaryFiber");

                    b.Property<decimal>("DietaryFiberPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("DietaryFiberPdv");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Protein");

                    b.Property<decimal>("ProteinPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("ProteinPdv");

                    b.Property<decimal>("SaturatedFat")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("SaturatedFat");

                    b.Property<decimal>("SaturatedFatPdv")
                        .HasColumnType("numeric")
                        .HasColumnName("decimal(5, 2)");

                    b.Property<string>("ServingSize")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("ServingSize");

                    b.Property<int>("ServingsPerRecipe")
                        .HasColumnType("integer")
                        .HasColumnName("ServingsPerRecipe");

                    b.Property<decimal>("Sodium")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Sodium");

                    b.Property<decimal>("SodiumPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("SodiumPdv");

                    b.Property<decimal>("Sugar")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Sugar");

                    b.Property<decimal>("SugarPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("SugarPdv");

                    b.Property<decimal>("TotalCarbohydrates")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("TotalCarbohydrates");

                    b.Property<decimal>("TotalCarbohydratesPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("TotalCarbohydratesPdv");

                    b.Property<decimal>("TotalFat")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("TotalFat");

                    b.Property<decimal>("TotalFatPdv")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("TotalFatPdv");

                    b.HasKey("RecipeId");

                    b.ToTable("RecipeNutrition");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeStep", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("Order");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("Instruction");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.HasKey("RecipeId", "Order");

                    b.ToTable("RecipeSteps");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeTag", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipeId");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid")
                        .HasColumnName("TagId");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.HasKey("RecipeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTags");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastModifiedBy");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("TagName");

                    b.HasKey("Id");

                    b.HasIndex("TagName")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeImage", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Images")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeMetadata", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Metadata")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeNutrition", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithOne("Nutrition")
                        .HasForeignKey("Culina.CookBook.Domain.Entities.RecipeNutrition", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeStep", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.RecipeTag", b =>
                {
                    b.HasOne("Culina.CookBook.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Tags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Culina.CookBook.Domain.Entities.Tag", "Tag")
                        .WithMany("RecipeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Ingredients");

                    b.Navigation("Metadata");

                    b.Navigation("Nutrition");

                    b.Navigation("Steps");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Culina.CookBook.Domain.Entities.Tag", b =>
                {
                    b.Navigation("RecipeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
